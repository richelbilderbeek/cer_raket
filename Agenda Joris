23-04
Globally read all articles on nestor. Tried to install babette package but didn't get it to work yet. Familiarised myself with R a bit again.

24-04
Installed Git and used it to make this update. Installed raket and all required packages. Went through the articles again.

25-04
Did "raket/vignettes/demo.Rmd" and ran into an error when converting the file to long form. Never mind, fixed it!
Tried to do the babette vignettes but they keep giving me an error:

Error in run(get_babette_path("anthus_aco.fas"), mcmc = mcmc) : 
  unused argument (mcmc = mcmc)

```
Note richelbilderbeek: I assume you now know the error?
Note J-Damhuis: Yup fixed it on 30-04
```

After some research I think this is because the scripts can't open BEAST or BEAUTI for some reason.

26-04
Installed Git and the R packages on my laptop. Found out Java is outdated. 

30-04
Fixed the error in the 'run' operator by putting 'babette::' in front of it. Ran the babette vignettes.

01-05
Read through the issues posted on the GitHub. Updated Java on my laptop and the vignettes work now.

02-05
Created a new branch on our GitHub and learnt how to commit to it (as you can see). Also managed to merge the branches.
Started coding the tests for raket, but the "pbd_expected_n_extant" function was not defined yet (is this meant to be this way?)

```
Note richelbilderbeek: probably my fault, I actively work on raket, an will inevitable break things once in a while
```

03-05
Found the file where the "pbd_expected_n_extant" function is defined and finished the code for the tests.
One potential issue I found is that when you test, the two values could be the same which results in an error. Is there a way to check
whether some value is greater/smaller or equal than another value instead of just greater/smaller? Got around this by using parameters
that were further apart.

```
Note richelbilderbeek: you could use testthat::expect_lte to test for 'less than or equal' 
```

Installed MobaXterm and managed to log into the Peregrine cluster.

04-05
Fixed the tests thanks to the advice richelbilderbeek gave me. Tried adding tests for the PBD package but couldn't understand the functions well enough.

07-05
Read the updated raket article, found a grammar mistake, didn't recognise any changes since the last time I read it.

08-05
Looked into the code for the "PBD::pbd_sim" function to figure out what an L table is made up of. This is what my understanding is right now:

id	|	parent	|	time they become incipient species	|	time they become good species	|	time of extinction	|	Species id

I'm not sure what the actual difference is between using crown age and stem age but I feel like knowing that isn't necessary to understand the "PBD::sampletree" function.